//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';
import grOriginal from 'ra-language-greek';

const enResources = {
  resources: {
    Player: {
      name: 'Player',
      fields: {
        name: 'Name',
        position: 'Position',
        jersey_number: 'Jersey_number',
        age: 'Age',
        id: 'id',
      },
    },
    Match: {
      name: 'Match',
      fields: {
        date: 'Date',
        opponent: 'Opponent',
        final_score: 'Final_score',
        location: 'Location',
        id: 'id',
      },
    },
    Playerstatistic: {
      name: 'Player Statistic',
      fields: {
        player_id: 'Player_id',
        match_id: 'Match_id',
        goals: 'Goals',
        assists: 'Assists',
        appearances: 'Appearances',
        minutes_played: 'Minutes_played',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Player: {
      name: 'Player (fr)',
      fields: {
        name: 'Name (fr)',
        position: 'Position (fr)',
        jersey_number: 'Jersey_number (fr)',
        age: 'Age (fr)',
        id: 'id',
      },
    },
    Match: {
      name: 'Match (fr)',
      fields: {
        date: 'Date (fr)',
        opponent: 'Opponent (fr)',
        final_score: 'Final_score (fr)',
        location: 'Location (fr)',
        id: 'id',
      },
    },
    Playerstatistic: {
      name: 'Player Statistic (fr)',
      fields: {
        player_id: 'Player_id (fr)',
        match_id: 'Match_id (fr)',
        goals: 'Goals (fr)',
        assists: 'Assists (fr)',
        appearances: 'Appearances (fr)',
        minutes_played: 'Minutes_played (fr)',
        id: 'id',
      },
    },
  },
};
const grResources = {
  resources: {
    Player: {
      name: 'Player (gr)',
      fields: {
        name: 'Name (gr)',
        position: 'Position (gr)',
        jersey_number: 'Jersey_number (gr)',
        age: 'Age (gr)',
        id: 'id',
      },
    },
    Match: {
      name: 'Match (gr)',
      fields: {
        date: 'Date (gr)',
        opponent: 'Opponent (gr)',
        final_score: 'Final_score (gr)',
        location: 'Location (gr)',
        id: 'id',
      },
    },
    Playerstatistic: {
      name: 'Player Statistic (gr)',
      fields: {
        player_id: 'Player_id (gr)',
        match_id: 'Match_id (gr)',
        goals: 'Goals (gr)',
        assists: 'Assists (gr)',
        appearances: 'Appearances (gr)',
        minutes_played: 'Minutes_played (gr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);
const gr = mergeTranslations(grOriginal, grResources);

const translations = { en, fr, gr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Français' },
    { locale: 'gr', name: 'Ελληνικά' },
  ],
);
